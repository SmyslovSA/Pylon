@model Pylon.Models.RegisterModel
@{
	ViewBag.Title = "Register";
}

@using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
	@Html.AntiForgeryToken()
	@Html.ValidationSummary(true, "", new { @class = "text-danger" })
	<section id="login-page-wrap" class="section-padding">
		<div class="container">
			<div class="row">
				<div class="col-lg-5 col-md-8 m-auto">
					<div class="login-page-content">
						<div class="login-form">
							<h3>Sign Up</h3>
							<form action="index.html">
								<div class="name">
									<div class="row">
										<div class="col-md-6">
											@Html.TextBoxFor(m => m.FirstName, new {@placeholder = "First Name"} )
											@Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
										</div>
										<div class="col-md-6">
											@Html.TextBoxFor(m => m.LastName, new { @placeholder = "Last Name" })
											@Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
										</div>
									</div>
								</div>
								<div class="username">
									@Html.TextBoxFor(m => m.Email, new { @placeholder = "Email" })
									@Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
								</div>
								<div class="password">
									@Html.PasswordFor(m => m.Password, new { @placeholder = "Password" })
									@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
								</div>
								<div class="password">
									@Html.PasswordFor(m => m.ConfirmPassword, new { @placeholder = "Password Confirmation" })
									@Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
								</div>
								<div class="log-btn">
									<button type="submit" class="btn btn-warning text-center"> Sign Up</button>
								</div>
							</form>
						</div>
						<div class="create-ac">
							 @Html.ActionLink("Have an account?","Login")
						</div>
					</div>
				</div>
			</div>
		</div>
	</section>
}

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}

