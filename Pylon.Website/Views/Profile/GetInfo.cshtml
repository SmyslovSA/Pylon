@using Pylon.Website.Extension
@model Pylon.Models.ProfileViewModel

<head>
	<meta charset="utf-8" />
	<meta name="viewport" content="width=device-width" />
</head>

<section id="car-list-area" class="section-padding">
	<div class="col-lg-12">
		<div class="row">
			<!-- Profile Avatar -->
			<div class="col-lg-4" style="padding-top:10px">
				<div class="editor-field">
					@using (Html.BeginForm("GhangeImage", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
					{
						if (Model.ImageMimeType == null)
						{
							<img src="/assets/img/no_image_profile.jpg" id="image" alt="">
						}
						else
						{
							<img src="@Url.Action("GetImage", "Profile", new { id = User.GetUserId() })" id="image" alt="" />
						}
						<div class="input-file-row-1">
							<div class="upload-file-container-text">
								<input type="file" name="uploadFile" class="photo" id="imgInput" hidden />
							</div>
						</div>
						<div class="login-form" style="background-color:white; padding:0px">
							<div class="log-btn">
								<button> Save </button>
							</div>
						</div>
					}
				</div>
			</div>
			<!-- Profile Avatar -->
			<!-- Profile Info -->
			<div class="col-lg-8">
				@using (Html.BeginForm("GhangePersonalData", "Profile", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
				{
					@Html.AntiForgeryToken()
					@Html.ValidationSummary(true, "", new { @class = "text-danger" })
					<div class="container">
						<div class="row">
							<div class="col-lg-7 col-md-8 m-auto" style="max-width:90%; flex-basis:90%;padding-top:10px">
								<div class="login-page-content">
									<div class="login-form">
										<h3>Personal Data</h3>
										<form action="index.html">
											@Html.HiddenFor(m => m.ImageData)
											@Html.HiddenFor(m => m.ImageMimeType)
											<div class="username">
												@Html.TextBoxFor(m => m.FirstName, new { @placeholder = "Name", @autocomplete = "off" })
												@Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
											</div>
											<div class="username">
												@Html.TextBoxFor(m => m.LastName, new { @placeholder = "Last Name", @autocomplete = "off" })
												@Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
											</div>
											<div class="username">
												@Html.TextBoxFor(m => m.Phone, new { @placeholder = "Phone in format XX-XXX-XX-XX", @autocomplete = "off" })
												@Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
											</div>
											<div class="log-btn">
												<button> Save </button>
											</div>
										</form>
									</div>
								</div>
							</div>
						</div>
					</div>
				}
				@using (Html.BeginForm("ChangePassword", "Profile", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
				{
					@Html.AntiForgeryToken()
					<div class="container">
						<div class="row">
							<div class="col-lg-7 col-md-8 m-auto" style="max-width:90%; flex-basis:90%">
								<div class="login-page-content">
									<div class="login-form">
										<h3>Change Password</h3>
										<form action="index.html">
											<div class="password">
												@Html.Password("newPassword")
											</div>
											<div class="password">
												@Html.Password("newPasswordConfirm")
											</div>
											<div class="log-btn">
												<button> Save </button>
											</div>
										</form>
									</div>
								</div>
							</div>
						</div>
					</div>
				}
			</div>
			<!--Profile info -->
		</div>
		<br>
		<br>
		<br>
	</div>
</section>
