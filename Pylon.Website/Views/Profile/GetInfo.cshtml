@using Pylon.Website.Extension
@model Pylon.Models.ProfileViewModel

<div class="col-lg-12">
	<div class="row">
		<!-- Profile Avatar -->
		<div class="col-lg-4" style="padding-top:10px">
			<div class="editor-field">
				@using (Html.BeginForm("GhangeImage", "Profile", FormMethod.Post, new { enctype = "multipart/form-data" }))
				{
					if (Model.ImageMimeType == null)
					{
						<img src="/assets/img/no_image_profile.jpg" alt="JSOFT">
					}
					else
					{
						<img src="@Url.Action("GetImage", "Profile", new { id = User.GetUserId() })" />
					}
					<div>
					<input type="file" name="uploadFile" visible="off" />
					</div>
					<div class="log-btn">
						<button> Save </button>
					</div>
					}
				</div>
		</div>
		<!-- Profile Avatar -->
		<!-- Profile Info -->
		<div class="col-lg-8">
			@using (Html.BeginForm("GhangePersonalData", "Profile", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
			{
				@Html.AntiForgeryToken()
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				<div class="container">
					<div class="row">
						<div class="col-lg-7 col-md-8 m-auto" style="max-width:90%; flex-basis:90%;padding-top:10px">
							<div class="login-page-content">
								<div class="login-form">
									<h3>Personal Data</h3>
									<form action="index.html">
										<div class="username">
											@Html.TextBoxFor(m => m.FirstName, new { @placeholder = "Name", @autocomplete = "off" })
											@Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })
										</div>
										<div class="username">
											@Html.TextBoxFor(m => m.LastName, new { @placeholder = "Last Name", @autocomplete = "off" })
											@Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })
										</div>
										<div class="username">
											@Html.TextBoxFor(m => m.Phone, new { @placeholder = "Phone in format XX-XXX-XX-XX", @autocomplete = "off" })
											@Html.ValidationMessageFor(m => m.Phone, "", new { @class = "text-danger" })
										</div>
										<div class="log-btn">
											<button> Change Personal Data </button>
										</div>
									</form>
								</div>
							</div>
						</div>
					</div>
				</div>
			}
			@using (Html.BeginForm("ChangePassword", "Profile", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
			{
				@Html.AntiForgeryToken()
				<div class="container">
					<div class="row">
						<div class="col-lg-7 col-md-8 m-auto" style="max-width:90%; flex-basis:90%">
							<div class="login-page-content">
								<div class="login-form">
									<h3>Change Password</h3>
									<form action="index.html">
										<div class="password">
											@Html.PasswordFor(m => m.Password, new { @placeholder = "New Password", @autocomplete = "off" })
											@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
										</div>
										<div class="password">
											@Html.PasswordFor(m => m.ConfirmPassword, new { @placeholder = "New Password Confirm", @autocomplete = "off" })
											@Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
										</div>
										<div class="log-btn">
											<button> Change Password </button>
										</div>
									</form>
								</div>
							</div>
						</div>
					</div>
				</div>
			}
		</div>
		<!--Profile info -->
	</div>
	<br>
</div>



